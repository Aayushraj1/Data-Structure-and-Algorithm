GFG: https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/1#

Given a directed graph. The task is to do Breadth First Traversal of this graph starting from 0.
Note: One can move from node u to node v only if there's an edge from u to v and find the BFS 
traversal of the graph starting from the 0th vertex, from left to right according to the graph. 
Also, you should only take nodes directly or indirectly connected from Node 0 in consideration.

Input:0 is connected to 1 , 2 , 3.
      2 is connected to 4.

Output: 0 1 2 3 4

#my code#

class Solution
{
    ArrayList<Integer> al;
    public ArrayList<Integer> bfsOfGraph(int V,ArrayList<ArrayList<Integer>> adj)
    {
        al = new ArrayList<Integer>();
        Queue<Integer> queue = new LinkedList<>();
        boolean visited[] = new boolean[V];
        
        queue.add(0);
        visited[0] = true;
        
        while(!queue.isEmpty())
        {
           int curr = queue.poll();
           al.add(curr);
           for(int neighbour : adj.get(curr))
           {
               if(!visited[neighbour])
               {
                    queue.add(neighbour);
                    visited[neighbour] = true;
               }
           }
        }
        return al;
    }
}






