GFG: https://practice.geeksforgeeks.org/problems/level-order-traversal/1

Given a binary tree, find its level order traversal.
Level order traversal of a tree is breadth-first traversal for the tree.

#MY_CODE#

class Solution
{
    //Function to return the level order traversal of a tree.
    static ArrayList <Integer> levelOrder(Node node) 
    {
        ArrayList<Integer> al = new ArrayList<>();
        Queue<Node> queue = new LinkedList<>();
        
        queue.add(node);
        
        while(!queue.isEmpty())
        {
            Node curr = queue.poll();
            al.add(curr.data);
            if(curr.left!=null)
                queue.add(curr.left);
            if(curr.right!=null)
                queue.add(curr.right);
        }
        return al;
    }
}

======================================================================================================================
Leetcode(102) : https://practice.geeksforgeeks.org/problems/level-order-traversal/1#

#MY_CODE#

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list = new LinkedList<List<Integer>>();
        Queue<TreeNode> queue = new LinkedList<>();
        
        if(root==null)
            return list;
        
        queue.add(root);
        
        while(!queue.isEmpty())
        {
            int levelNum = queue.size();
            List<Integer> sublist = new LinkedList<>();
            
            for(int i=0;i<levelNum;i++)
            {
                TreeNode curr = queue.peek();
                if(curr.left!=null)
                    queue.add(curr.left);
                if(curr.right!=null)
                    queue.add(curr.right);
                sublist.add(queue.poll().val);                
            }
            list.add(sublist);
        }
        return list;
    }
}
